USE LEARN16;

DROP SEQUENCE MYSEQ;

CREATE SEQUENCE MYSEQ
AS INT
START WITH 1 
INCREMENT BY 1
MAXVALUE 10
MINVALUE 1
CYCLE
CACHE 5;


SELECT NEXT VALUE FOR MYSEQ;

CREATE SEQUENCE MYSEQ
AS INT
START WITH 100
INCREMENT BY 10;


CREATE TABLE EMP3
(EID INT,
NAME VARCHAR(30),
SALARY INT)
;


CREATE SEQUENCE MYSEQ
AS INT
START WITH 1 
INCREMENT BY 1;

INSERT INTO EMP3
VALUES (NEXT VALUE FOR MYSEQ, 'AJAT MALIK', 100000);

INSERT INTO EMP3
VALUES (NEXT VALUE FOR MYSEQ, 'RAJAT SHARMA', 80000);

INSERT INTO EMP3
VALUES (NEXT VALUE FOR MYSEQ, 'MOHIT KAPOOR', 90000);

SELECT * FROM EMP3;

CREATE PROCEDURE INEMP3 @N AS VARCHAR(30), @X AS INT
AS
BEGIN
	INSERT INTO EMP3
	VALUES(NEXT VALUE FOR MYSEQ, @N, @X);

	SELECT * FROM EMP3;
END;

INEMP3 'KAJAL SHARMA', 85000;
INEMP3 'GAGAN GUPTA', 90000;

INEMP3 'MONIKA ARORA', 75000;
INEMP3 'RAM', 100000;
INEMP3 'KAPIL GUPTA', 80000;
INEMP3 'AMANDEEP SINGH', 90000;

DELETE FROM EMP3 WHERE EID = 11;


CREATE SEQUENCE S1
AS INT
START WITH 1 
INCREMENT BY 1 ;

DROP TABLE EMP3;

CREATE TABLE EMP3
(EID CHAR(5),
NAME VARCHAR(30),
SALARY INT)

DROP PROCEDURE INEMP3;

CREATE PROCEDURE INEMP3 @N AS VARCHAR(30), @S AS INT
AS
BEGIN
		DECLARE @I AS INT;
		DECLARE @ID AS CHAR(5);

		SET @I = (NEXT VALUE FOR S1);

		IF @I < 10
			SET @ID = CONCAT('E000', @I);
		ELSE IF @I <100
			SET @ID = CONCAT ('E00', @I)
		ELSE IF @I <1000
			SET @ID = CONCAT ('E0', @I)
		ELSE IF @I <10000
			SET @ID = CONCAT ('E', @I)
		ELSE
			SET @ID = 'NA';
		
		INSERT INTO EMP3
		VALUES (@ID, @N, @S);

		SELECT * FROM EMP3;
END;

INEMP3 'AMIT KUMAR', 200000;
INEMP3 'RAHUL SHARMA', 150000;
INEMP3 'RAM KUMAR', 200000;
INEMP3 'ABHAY GOYAL', 100000;


-- E  -1 -E0001

CREATE FUNCTION GENID (@C AS CHAR(1), @I AS INT)
RETURNS CHAR(5)
AS
BEGIN
	DECLARE @ID AS CHAR(5);

	SELECT @ID = CASE
					WHEN @I < 10 THEN CONCAT(@C, '000', @I)
					WHEN @I < 100 THEN CONCAT(@C, '00', @I)
					WHEN @I < 1000 THEN CONCAT(@C, '0', @I)
					WHEN @I < 10000 THEN CONCAT(@C,  @I)
					ELSE 'NA'
	END;
	RETURN @ID;
END;

SELECT DBO.GENID('O',1295);

CREATE PROCEDURE INEMP3 @N AS VARCHAR(30), @S AS INT
AS
BEGIN
		DECLARE @I AS INT;
		DECLARE @ID AS CHAR(5);

		SET @I = (NEXT VALUE FOR S1);

		SET @ID = DBO.GENID('E',@I);
				
		INSERT INTO EMP3
		VALUES (@ID, @N, @S);

		SELECT * FROM EMP3;
END;

INEMP3 'ABHISHEK GOYAL', 170000;


CREATE TABLE PRODUCT
(PID CHAR (5),
PDESC VARCHAR(50),
PRICE INT);

CREATE TABLE STOCK 
(PID CHAR(5),
SQTY INT);

CREATE TABLE ORDERS
(OID CHAR(5),
CID CHAR(5),
PID CHAR(5),
OQTY INT);


INSERT INTO PRODUCT VALUES('P0001', 'DELL MOUSE', 350);
INSERT INTO PRODUCT VALUES('P0002', 'DELL KEYBOARD', 750);
INSERT INTO PRODUCT VALUES('P0003', 'SAMSUNG 21" LED MONTOR', 9000);
INSERT INTO PRODUCT VALUES('P0004', '8 GB DDR4 RAM', 2750);
INSERT INTO PRODUCT VALUES('P0005', 'DELL I7 LAPTOP', 55000);

INSERT INTO STOCK VALUES ('P0001', 200);
INSERT INTO STOCK VALUES ('P0002', 200);
INSERT INTO STOCK VALUES ('P0003', 100);
INSERT INTO STOCK VALUES ('P0004', 100);
INSERT INTO STOCK VALUES ('P0005', 50);

SELECT * FROM PRODUCT;
SELECT * FROM STOCK;
SELECT * FROM ORDERS;

INSERT INTO ORDERS VALUES ('O0001', 'C0001', 'P0001', 20);
INSERT INTO ORDERS VALUES ('O0002', 'C0002', 'P0001', 40);
INSERT INTO ORDERS VALUES ('O0003', 'C0002', 'P0002', 20);
INSERT INTO ORDERS VALUES ('O0004', 'C0003', 'P0003', 20);
INSERT INTO ORDERS VALUES ('O0005', 'C0004', 'P0004', 30);
INSERT INTO ORDERS VALUES ('O0006', 'C0005', 'P0004', 40);
INSERT INTO ORDERS VALUES ('O0007', 'C0006', 'P0004', 20);
INSERT INTO ORDERS VALUES ('O0008', 'C0001', 'P0003', 50);
INSERT INTO ORDERS VALUES ('O0009', 'C0007', 'P0003', 20);
INSERT INTO ORDERS VALUES ('O0010', 'C0008', 'P0003', 10);

UPDATE ORDERS SET OQTY = 20 WHERE OID ='O0010';
UPDATE ORDERS SET OQTY = 50 WHERE OID ='O0005';

UPDATE ORDERS SET OQTY = 40 WHERE OID ='O0004';
DROP TRIGGER TR_IN_ORD;

CREATE TRIGGER TR_IN_ORD
ON ORDERS
FOR INSERT
AS
BEGIN
	SET NOCOUNT ON;
	UPDATE STOCK SET SQTY = SQTY - (SELECT OQTY FROM INSERTED)
	WHERE PID = (SELECT PID FROM INSERTED);
END;


CREATE TRIGGER TR_DEL_PRO
ON PRODUCT
FOR DELETE
AS
BEGIN
	DELETE STOCK WHERE PID = (SELECT PID FROM DELETED);

END;

DELETE FROM PRODUCT WHERE PID = 'P0005';


CREATE TRIGGER TR_UP_ORD
ON ORDERS
FOR UPDATE
AS
BEGIN
	DECLARE @OQ AS INT;
	DECLARE @NQ AS INT;

	SET @OQ = (SELECT OQTY FROM DELETED);
	SET @NQ = (SELECT OQTY FROM INSERTED);

	UPDATE STOCK SET SQTY = SQTY +@OQ - @NQ
	WHERE PID = (SELECT PID FROM INSERTED);
END;

DROP TRIGGER TR_IN_ORD;
CREATE TRIGGER TR_IN_ORD
ON ORDERS
FOR INSERT
AS
BEGIN
	DECLARE @QR AS INT;
	DECLARE @QS AS INT;

	SET @QR = (SELECT OQTY FROM INSERTED);
	SET @QS = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));

	IF @QS >= @QR 
		BEGIN
			UPDATE STOCK SET SQTY = SQTY - @QR
			WHERE PID = (SELECT PID FROM INSERTED);

			COMMIT;
			PRINT ('ORDER ACCEPTED');
		END
	ELSE
		BEGIN
			ROLLBACK;
			PRINT('INSUFFICIENT QUANTITY - ORDER REJECTED')
		END;
END;


